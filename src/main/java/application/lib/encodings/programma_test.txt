
lock(3,4).
next(0)|next(1)|next(2)|next(3).
policeman(4,4,stiffy).
policeman(13,5,gold).
policeman(18,7,nee).
policeman(16,4,scaredy).



previous_action(left).
%up:0
%down:1
%left:2
%right:3



%Algoritmo che ci calcola la minima distanza tra i fantasmi e pacman.
min_distance(3,4,13,5,4).
distance(3).
distance(4).
distance(5).
distance(6).



percorso(4,4).
percorso(2,4).
percorso(3,5).
percorso(3,3).



coin(4,4).



closestCoin(2,4).
closestCoin(3,3).



distancesClosestCoin(3).




distance(1..10).




next(left)|next(right)|next(up)|next(down).
nextCell(X,Y):-lock(Lx,Y),next(right),X=Lx+1,percorso(X,Y).
nextCell(X,Y):-lock(Lx,Y),next(left),X=Lx-1,percorso(X,Y).
nextCell(X,Y):-lock(X,Ly),next(up),Y=Ly+1,percorso(X,Y).
nextCell(X,Y):-lock(X,Ly),next(down),Y=Ly-1,percorso(X,Y).

empty(X,Y):- percorso(X,Y),not coin(X,Y).

distanceLockNextPoliceMan(D,Pm):-nextCell(Xl,Yl),policeman(Xp,Yp,Pm),min_distance(Xl,Yl,Xp,Yp,D).
minDistanceLockNextPoliceMan(MD):-#min{D:distanceLockNextPoliceMan(D,_)}=MD,distance(MD).

:~minDistanceLockNextPoliceMan(MD),Min=10-MD,not powerup.[Min:4]
:~minDistanceLockNextPoliceMan(MD),powerup.[MD:4]
:~nextCell(X,Y),empty(X,Y).[1:3]
:~nextCell(X,Y),closestCoin(X,Y),distanceClosestCoin(D).[D:2]
:~previous_action(X),next(Y),X!=Y.[1:1]


